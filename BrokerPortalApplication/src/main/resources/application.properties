spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

# ===============================
# = DATA SOURCE
# ===============================

spring.datasource.url=jdbc:mysql://localhost:3306/assignment2_db?useSSL=true&requireSSL=false
spring.datasource.username=hari
spring.datasource.password=admin

#spring.datasource.url=jdbc:mysql://mysql-docker:3306/demo_db?useSSL=true&requireSSL=false
#spring.datasource.username=hari
#spring.datasource.password=admin
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=5
spring.datasource.tomcat.test-on-borrow=true


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

server.port=8086

#Global Properties
#employerPort=8085
#employerIp = localhost
serverIp=localhost
